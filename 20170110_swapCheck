/*
date: 2017-01-10
author: eason Tsai

A non-empty zero-indexed array A consisting of N integers is given.
You can perform a single swap operation in array A. This operation takes two indices I and J, such that 0 ≤ I ≤ J < N, and exchanges the values of A[I] and A[J].
The goal is to check whether array A can be sorted into non-decreasing order by performing only one swap operation.
For example, consider array A such that:
    A[0] = 1
    A[1] = 3
    A[2] = 5
    A[3] = 3
    A[4] = 7
After exchanging the values A[2] and A[3] we obtain an array [1, 3, 3, 5, 7], which is sorted in non-decreasing order.
Write a function:
function solution($A);
that, given a non-empty zero-indexed array A consisting of N integers, returns true if the array can be sorted into non-decreasing order by one swap operation or false otherwise.
For example, given:
    A[0] = 1
    A[1] = 3
    A[2] = 5
    A[3] = 3
    A[4] = 7
the function should return true, as explained above.
On the other hand, for the following array:
    A[0] = 1
    A[1] = 3
    A[2] = 5
    A[3] = 3
    A[4] = 4
the function should return false, as there is no single swap operation that sorts the array.
Assume that:
N is an integer within the range [1..100,000];
each element of array A is an integer within the range [1..1,000,000,000].
Complexity:
expected worst-case time complexity is O(N*log(N));
expected worst-case space complexity is O(N), beyond input storage (not counting the storage required for input arguments).
Elements of input arrays can be modified.
*/


$A = [1,3,5,3,7];
$A2 = [1,8,4,11,7];
$A3 = [1,11,5,3,7];

function solution($A) {
    $len = count($A);
    $swap = false;
    for ($i=1;$i<$len-1;$i++) {
        if(($A[$i] > $A[$i+1])) {
            if(!$swap) {
                $temp = $A[$i+1];
                $A[$i+1] = $A[$i];
                $A[$i] = $temp;
                echo "swap #".$i.' AND #'.($i+1);
                $swap = 1;
            } else {
                return 0;
            }
        }
    }
    return 1;
}
echo '<pre>'.print_r(solution($A), true).'</pre>';
echo '<pre>'.print_r(solution($A2), true).'</pre>';
echo '<pre>'.print_r(solution($A3), true).'</pre>';
